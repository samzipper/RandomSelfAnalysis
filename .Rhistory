ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
scale_x_date(name = "Year-Month") +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work")
ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
#scale_x_date(name = "Year-Month") +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work")
ggplot(subset(evening_work), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
#scale_x_date(name = "Year-Month") +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work")
ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
#scale_x_date(name = "Year-Month") +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work")
View(weekly_hrs)
# summarize by year
weekly_hrs_yr <-
weekly_hrs %>%
group_by(Year) %>%
summarize(median_hrs_wk = median(hours_worked))
View(weekly_hrs_yr)
ggplot(weekly_hrs_yr, aes(x = Year, y = median_hrs_wk)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "Median hours Worked in Week") +
geom_hline(yintercept = 40, color = col.gray)
# summarize by year
weekly_hrs_yr <-
weekly_hrs %>%
group_by(Year) %>%
summarize(median_hrs_wk = median(hours_worked),
mean_hrs_wk = mean(hours_worked))
ggplot(weekly_hrs_yr, aes(x = Year, y = mean_hrs_wk)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "Median hours worked in week") +
geom_hline(yintercept = 40, color = col.gray)
ggplot(weekly_hrs_yr, aes(x = Year, y = median_hrs_wk)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "Median hours worked in week") +
geom_hline(yintercept = 40, color = col.gray)
View(weekly_hrs_yr)
round(weekly_hrs_yr$median_hrs_wk[weekly_hrs_yr$Year == 2019], 1)
View(daily_hrs)
View(daily_hrs)
View(daily_hrs)
unique(daily_hrs$Daytype)
# figure out average hours worked per day of work
daily_hrs_yr <-
daily_hrs %>%
group_by(Year) %>%
summarize(work_hours = sum(hours_worked),
work_days = (sum(Daytype %in% c("conference", "work")) + sum(Daytype == "half day")*0.5))
View(daily_hrs_yr)
which(is.na(daily_hrs$Daytype))
View(all_weeks_22)
View(daily_hrs)
all_weeks_22 <- read_csv("WorkTimeAnalysis_Hours_2022.csv", col_types = "ccccT")
# combine years
all_weeks <-
all_weeks_19 %>%
dplyr::bind_rows(all_weeks_20) %>%
dplyr::bind_rows(all_weeks_21) %>%
dplyr::bind_rows(all_weeks_22) %>%
subset(!is.na(Time))
# set factors for plotting
all_weeks$Day <- factor(all_weeks$Day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
all_weeks$Time <- factor(all_weeks$Time, levels = unique(all_weeks$Time))
# lump 'Travel' with 'Not Work' because if I was working on the plane I coded it as such
all_weeks$Activity[all_weeks$Activity == "travel"] <- "Not Work"
# summarize by week
weekly_hrs <-
all_weeks %>%
dplyr::group_by(week_start_date) %>%
dplyr::summarize(hours_worked = sum(Activity != "Not Work")*0.5) %>%
dplyr::mutate(Year = lubridate::year(week_start_date))
# median and mode
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
median_hrs_wk <- median(weekly_hrs$hours_worked)
mode_hrs_wk <- getmode(weekly_hrs$hours_worked)
# summarize by year
weekly_hrs_yr <-
weekly_hrs %>%
group_by(Year) %>%
summarize(median_hrs_wk = median(hours_worked),
mean_hrs_wk = mean(hours_work))
View(weekly_hrs)
# summarize by year
weekly_hrs_yr <-
weekly_hrs %>%
group_by(Year) %>%
summarize(median_hrs_wk = median(hours_worked),
mean_hrs_wk = mean(hours_worked))
ggplot(weekly_hrs, aes(x = week_start_date, y = hours_worked)) +
geom_col(color = NA, fill = col.cat.blu) +
scale_x_datetime(name = "Week", expand = c(0, 0), limits = date_limits) +
scale_y_continuous(name = "Hours Worked in Week") +
geom_hline(yintercept = 40, color = col.gray)
ggplot(weekly_hrs_yr, aes(x = Year, y = median_hrs_wk)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "Median hours worked in week") +
geom_hline(yintercept = 40, color = col.gray)
# make a column for the actual date
day_to_number <- tibble(Day = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"),
DayNum = seq(0,6))
all_weeks <-
dplyr::left_join(all_weeks, day_to_number, by = "Day") %>%
dplyr::mutate(date = week_start_date + days(DayNum))
# summarize by day
daily_hrs <-
all_weeks %>%
dplyr::group_by(date, Day, week_start_date, Daytype) %>%
dplyr::summarize(hours_worked = sum(Activity != "Not Work")*0.5) %>%
dplyr::mutate(hours_worked_cut = cut(hours_worked, c(0, 0.25, 2, 6, 9, 24), include.lowest = T,
labels = c("0", "0.5 - 2", "2.5 - 6", "6.5 - 9", "> 9.5")),
Year = lubridate::year(date))
daily_hrs$Day <- factor(daily_hrs$Day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# figure out average hours worked per day of work
daily_hrs_yr <-
daily_hrs %>%
group_by(Year) %>%
summarize(work_hours = sum(hours_worked),
work_days = (sum(Daytype %in% c("conference", "work")) + sum(Daytype == "half day")*0.5))
View(daily_hrs_yr)
# summarize by day
daily_hrs <-
all_weeks %>%
dplyr::group_by(date, Day, week_start_date, Daytype) %>%
dplyr::summarize(hours_worked = sum(Activity != "Not Work")*0.5) %>%
dplyr::mutate(hours_worked_cut = cut(hours_worked, c(0, 0.25, 2, 6, 9, 24), include.lowest = T,
labels = c("0", "0.5 - 2", "2.5 - 6", "6.5 - 9", "> 9.5")),
Year = lubridate::year(date)) %>%
subset(Year != 2023)
daily_hrs$Day <- factor(daily_hrs$Day, levels = c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"))
# figure out average hours worked per day of work
daily_hrs_yr <-
daily_hrs %>%
group_by(Year) %>%
summarize(work_hours = sum(hours_worked),
work_days = (sum(Daytype %in% c("conference", "work")) + sum(Daytype == "half day")*0.5))
View(daily_hrs_yr)
# figure out average hours worked per day of work
daily_hrs_yr <-
daily_hrs %>%
group_by(Year) %>%
summarize(work_hours = sum(hours_worked),
work_days = (sum(Daytype %in% c("conference", "work")) + sum(Daytype == "half day")*0.5),
work_hrs.day = work_hours/work_days)
View(daily_hrs_yr)
ggplot(daily_hrs_yr, aes(x = Year, y = work_hrs.day)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "Average hours worked per work day") +
geom_hline(yintercept = 8, color = col.gray)
ggplot(daily_hrs_yr, aes(x = Year, y = work_hrs.day)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "Average hours worked per work day",
breaks = seq(0, 9, 1)) +
geom_hline(yintercept = 8, color = col.gray)
round(daily_hrs_yr$work_hrs.day[daily_hrs_yr$Year == 2022] 1)
round(daily_hrs_yr$work_hrs.day[daily_hrs_yr$Year == 2022], 1)
# data frame with just work hours
all_work <- all_weeks[all_weeks$Activity != "Not Work", ]
# summarize by activity
work_by_activity <-
all_work %>%
dplyr::group_by(Activity) %>%
dplyr::summarize(Hours = n()*0.5,
PrcTime = Hours/sum(weekly_hrs$hours_worked)) %>%
dplyr::arrange(-Hours)
# yearly percent for each activity
work_by_year <-
all_work %>%
dplyr::mutate(Year = lubridate::year(week_start_date)) %>%
dplyr::group_by(Year) %>%
dplyr::summarize(halfhrs = n(),
conference = sum(Activity=="conference")/halfhrs,
logistics = sum(Activity=="logistics")/halfhrs,
mentees = sum(Activity=="mentees")/halfhrs,
field = sum(Activity=="field")/halfhrs,
research = sum(Activity=="research")/halfhrs,
service = sum(Activity=="service")/halfhrs,
talking = sum(Activity=="talking")/halfhrs) %>%
dplyr::select(-halfhrs) %>%
tidyr::pivot_longer(all_of(work_by_activity$Activity), names_to = "Activity", values_to = "Time_Prc")
# data frame with just work hours
all_work <- all_weeks[all_weeks$Activity != "Not Work", ]
# summarize by activity
work_by_activity <-
all_work %>%
dplyr::group_by(Activity) %>%
dplyr::summarize(Hours = n()*0.5,
PrcTime = Hours/sum(weekly_hrs$hours_worked)) %>%
dplyr::arrange(-Hours)
# yearly percent for each activity
work_by_year <-
all_work %>%
dplyr::mutate(Year = lubridate::year(week_start_date)) %>%
dplyr::group_by(Year) %>%
dplyr::summarize(halfhrs = n(),
conference = sum(Activity=="conference")/halfhrs,
logistics = sum(Activity=="logistics")/halfhrs,
mentees = sum(Activity=="mentees")/halfhrs,
field = sum(Activity=="field")/halfhrs,
research = sum(Activity=="research")/halfhrs,
service = sum(Activity=="service")/halfhrs,
talking = sum(Activity=="talking")/halfhrs,
teaching = sum(Activity=="teaching")/halfhrs) %>%
dplyr::select(-halfhrs) %>%
tidyr::pivot_longer(all_of(work_by_activity$Activity), names_to = "Activity", values_to = "Time_Prc")
# weekly percent for each activity
work_by_week <-
all_work %>%
dplyr::group_by(week_start_date) %>%
dplyr::summarize(halfhrs = n(),
conference = sum(Activity=="conference")/halfhrs,
logistics = sum(Activity=="logistics")/halfhrs,
mentees = sum(Activity=="mentees")/halfhrs,
field = sum(Activity=="field")/halfhrs,
research = sum(Activity=="research")/halfhrs,
service = sum(Activity=="service")/halfhrs,
talking = sum(Activity=="talking")/halfhrs,
teaching = sum(Activity=="teaching")/halfhrs) %>%
dplyr::select(-halfhrs) %>%
tidyr::pivot_longer(all_of(work_by_activity$Activity), names_to = "Activity", values_to = "Time_Prc")
# set factor to order by most to least common
work_by_activity$Activity <- factor(work_by_activity$Activity, levels = work_by_activity$Activity)
all_work$Activity <- factor(all_work$Activity, levels = work_by_activity$Activity)
all_work$Activity <- factor(all_work$Activity, levels = work_by_activity$Activity)
work_by_week$Activity <- factor(work_by_week$Activity, levels = rev(work_by_activity$Activity))
# number of field work days in each year
n_field_days_2022 <- dim(unique(subset(all_work, Activity == "field" & lubridate::year(week_start_date) == 2022)[,c("Day", "week_start_date")]))[1]
n_field_days_2021 <- dim(unique(subset(all_work, Activity == "field" & lubridate::year(week_start_date) == 2021)[,c("Day", "week_start_date")]))[1]
n_field_days_2020 <- dim(unique(subset(all_work, Activity == "field" & lubridate::year(week_start_date) == 2020)[,c("Day", "week_start_date")]))[1]
n_field_days_2019 <- dim(unique(subset(all_work, Activity == "field" & lubridate::year(week_start_date) == 2019)[,c("Day", "week_start_date")]))[1]
all_work %>%
dplyr::mutate(Year = lubridate::year(week_start_date)) %>%
ggplot(aes(x = Year, fill = Activity)) +
geom_bar() +
scale_y_continuous(name = "Half-Hours") +
scale_fill_manual(values = pal_activity)
?scale_y_continuous
all_work %>%
dplyr::mutate(Year = lubridate::year(week_start_date)) %>%
ggplot(aes(x = Year, fill = Activity)) +
geom_bar() +
scale_y_continuous(name = "Half-Hours", trans = function(x) x*0.5) +
scale_fill_manual(values = pal_activity)
all_work %>%
dplyr::mutate(Year = lubridate::year(week_start_date)) %>%
ggplot(aes(x = Year, fill = Activity)) +
geom_bar() +
scale_y_continuous(name = "Half-Hours") +
scale_fill_manual(values = pal_activity)
# evening work, excluding field, conference, and travel
evening_work <-
all_weeks %>%
subset(Time %in% levels(all_weeks$Time)[21:35]) %>%
subset(!(Activity %in% c("Not Work", "field", "conference", "travel"))) %>%
mutate(Year = lubridate::year(week_start_date),
Month = lubridate::month(week_start_date),
YM = ymd(paste0(Year, "-", Month, "-01")))
ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
#scale_x_date(name = "Year-Month") +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work")
ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
scale_x_continuous(name = "Month", breaks = seq(1, 12)) +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work")
ggplot(evening_work, aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
scale_x_continuous(name = "Month", breaks = seq(1, 12)) +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work")
View(daily_hrs)
View(daily_hrs)
# figure out no work days per week
weekly_no_work <-
daily_hrs %>%
group_by(week_start_date) %>%
summarize(no_work_days = sum(hours_worked == 0))
View(weekly_no_work)
ggplot(weekly_no_work, aes(x = week_start_date, y = no_work_days)) + geom_col()
yearly_no_work <-
weekly_no_work %>%
group_by(Year) %>%
summarize(no_work_days = sum(no_work_days),
weeks_gt_0 = sum(no_work_days > 0))
# figure out no work days per week
weekly_no_work <-
daily_hrs %>%
group_by(Year, week_start_date) %>%
summarize(no_work_days = sum(hours_worked == 0))
yearly_no_work <-
weekly_no_work %>%
group_by(Year) %>%
summarize(no_work_days = sum(no_work_days),
weeks_gt_0 = sum(no_work_days > 0))
View(yearly_no_work)
View(weekly_no_work)
View(yearly_no_work)
yearly_no_work <-
weekly_no_work %>%
group_by(Year) %>%
summarize(no_work_days_yr = sum(no_work_days),
weeks_gt_0 = sum(no_work_days > 0))
View(yearly_no_work)
p_noworkdays + p_weeksoff +
plot_layout(nrow = 1)
p_noworkdays <-
ggplot(yearly_no_work, aes(x = Year, y = no_work_days_yr)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "Days with 0 hrs work")
p_weeksoff <-
ggplot(yearly_no_work, aes(x = Year, y = weeks_gt_0)) +
geom_col(fill = col.cat.blu) +
scale_y_continuous(name = "# of weeks with >= 1 day off")
p_noworkdays + p_weeksoff +
plot_layout(nrow = 1)
yearly_no_work$no_work_days_yr[yearly_no_work$Year == 2022]
all_work %>%
dplyr::mutate(Year = lubridate::year(week_start_date)) %>%
ggplot(aes(x = Year, fill = Activity)) +
geom_bar() +
scale_y_continuous(name = "Half-Hours") +
scale_fill_manual(values = pal_activity)
ggplot(work_by_week, aes(x = week_start_date, y = Time_Prc, color = Activity)) +
geom_point() +
scale_x_datetime(name = "Week", expand = c(0,0), limits = date_limits) +
scale_y_continuous(name = "Time Spent [%]", expand = c(0,0), limits = c(0,1),
labels = scales::percent) +
facet_wrap(~Activity, scales = "free", ncol = 3) +
scale_color_manual(values = pal_activity) +
#stat_smooth(formula = "y ~ x") +
theme(legend.position = "bottom") +
labs(title = "Weekly percent time by activity")
ggplot(work_by_week, aes(x = week_start_date, y = Time_Prc, color = Activity)) +
geom_point() +
scale_x_datetime(name = "Week", expand = c(0,0), limits = date_limits) +
scale_y_continuous(name = "Time Spent [%]", expand = c(0,0), limits = c(0,1),
labels = scales::percent) +
facet_wrap(~Activity, scales = "free", ncol = 3) +
scale_color_manual(values = pal_activity) +
#stat_smooth(formula = "y ~ x") +
theme(legend.position = "bottom") +
labs(title = "Weekly percent time by activity")
# evening work, excluding field, conference, and travel
evening_work <-
all_weeks %>%
subset(Time %in% levels(all_weeks$Time)[21:35]) %>%
subset(!(Activity %in% c("Not Work", "field", "conference", "travel"))) %>%
mutate(Year = lubridate::year(week_start_date),
Month = lubridate::month(week_start_date),
YM = ymd(paste0(Year, "-", Month, "-01")))
ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
scale_x_continuous(name = "Month", breaks = seq(1,)) +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work") +
geom_hline(yintercept = 8, color = col.gray)
ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM") +
scale_x_continuous(name = "Month", breaks = seq(1,12)) +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work") +
geom_hline(yintercept = 8, color = col.gray)
ggplot(daily_hrs_yr, aes(x = Year, y = work_hrs.day)) +
geom_col(fill = "black") +
scale_y_continuous(name = "Average hours worked per work day",
breaks = seq(0, 9, 1)) +
geom_hline(yintercept = 8, color = col.gray)
ggplot(weekly_hrs, aes(x = week_start_date, y = hours_worked)) +
geom_col(color = NA, fill = "black") +
scale_x_datetime(name = "Week", expand = c(0, 0), limits = date_limits) +
scale_y_continuous(name = "Hours Worked in Week") +
geom_hline(yintercept = 40, color = col.gray)
ggplot(weekly_hrs, aes(x = week_start_date, y = hours_worked)) +
geom_col(color = NA, fill = "black") +
scale_x_datetime(name = "Week", expand = c(0, 0), limits = date_limits) +
scale_y_continuous(name = "Hours Worked in Week",
expand = expansion(mult = c(0, 0.05))) +
geom_hline(yintercept = 40, color = col.gray)
ggplot(daily_hrs_yr, aes(x = Year, y = work_hrs.day)) +
geom_col(fill = "black") +
scale_y_continuous(name = "Average hours worked per work day",
breaks = seq(0, 9, 1),
expand = expansion(mult = c(0, 0.05))) +
geom_hline(yintercept = 8, color = col.gray)
p_noworkdays <-
ggplot(yearly_no_work, aes(x = Year, y = no_work_days_yr)) +
geom_col(fill = "black") +
scale_y_continuous(name = "Days with 0 hrs work",
expand = expansion(mult = c(0, 0.05)))
p_noworkdays + p_weeksoff +
plot_layout(nrow = 1)
p_weeksoff <-
ggplot(yearly_no_work, aes(x = Year, y = weeks_gt_0)) +
geom_col(fill = "black") +
scale_y_continuous(name = "# of weeks with >= 1 day off",
expand = expansion(mult = c(0, 0.05)))
p_weeksoff
p_noworkdays <-
ggplot(yearly_no_work, aes(x = Year, y = no_work_days_yr)) +
geom_col(fill = "black") +
scale_y_continuous(name = "Days with 0 hrs work",
expand = expansion(mult = c(0, 0.05)))
p_weeksoff <-
ggplot(yearly_no_work, aes(x = Year, y = weeks_gt_0)) +
geom_col(fill = "black") +
scale_y_continuous(name = "# of weeks with >= 1 day off",
expand = expansion(mult = c(0, 0.05)))
p_noworkdays + p_weeksoff +
plot_layout(nrow = 1)
all_work %>%
dplyr::mutate(Year = lubridate::year(week_start_date)) %>%
ggplot(aes(x = Year, fill = Activity)) +
geom_bar() +
scale_y_continuous(name = "Half-Hours",
expand = expansion(mult = c(0, 0.05))) +
scale_fill_manual(values = pal_activity)
ggplot(subset(evening_work, Year >= 2020), aes(x = Month, fill = Activity)) +
geom_bar() +
facet_wrap(~Year, ncol = 1) +
scale_y_continuous(name = "Half-Hours Worked After 5 PM",
expand = expansion(mult = c(0, 0.05))) +
scale_x_continuous(name = "Month", breaks = seq(1,12)) +
scale_fill_manual(values = pal_activity) +
labs(title = "Monthly evening work") +
geom_hline(yintercept = 8, color = col.gray)
n_field_days_yr <-
all_work %>%
subset(Activity == "field")
View(n_field_days_yr)
View(n_field_days_yr)
n_field_days_yr <-
all_work %>%
subset(Activity == "field") %>%
select(date) %>%
unique()
View(n_field_days_yr)
View(all_work)
n_field_days_yr <-
all_work %>%
subset(Activity == "field") %>%
select(date) %>%
unique() %>%
mutate(Year = year(date))
View(n_field_days_yr)
n_field_days_yr <-
all_work %>%
subset(Activity == "field") %>%
select(date) %>%
unique() %>%
mutate(Year = year(date)) %>%
group_by(Year) %>%
summarize(n_field_days = n())
View(n_field_days_yr)
ggplot(n_field_days_yr, aes(x = Year, y = n_field_days)) +
geom_col(fill = "black") +
scale_y_continuous(name = "Number of days with field work",
expand = expansion(mult = c(0, 0.05))) +
geom_hline(yintercept = 24, color = col.gray)
1.5/8
ggplot(weekly_hrs, aes(x = week_start_date, y = hours_worked)) +
geom_col(color = NA, fill = "black") +
scale_x_datetime(name = NULL, expand = c(0, 0), limits = date_limits) +
scale_y_continuous(name = "Hours Worked in Week",
expand = expansion(mult = c(0, 0.05))) +
geom_hline(yintercept = 40, color = col.gray)
ggplot(weekly_hrs, aes(x = week_start_date, y = hours_worked)) +
geom_col(color = NA, fill = "black") +
scale_x_datetime(name = NULL, limits = date_limits) +
scale_y_continuous(name = "Hours Worked in Week",
expand = expansion(mult = c(0, 0.05))) +
geom_hline(yintercept = 40, color = col.gray)
ggplot(daily_hrs_yr, aes(x = Year, y = work_hrs.day)) +
geom_col(fill = "black") +
scale_y_continuous(name = "Average hours worked per work day",
breaks = seq(0, 9, 1),
expand = expansion(mult = c(0, 0.05))) +
geom_hline(yintercept = 8, color = col.gray)
p_noworkdays + p_weeksoff +
plot_layout(nrow = 1)
p_noworkdays + p_weeksoff +
plot_layout(nrow = 1)
